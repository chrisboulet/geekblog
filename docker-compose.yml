services:
  # Base de données PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: geekblog_db
    environment:
      POSTGRES_DB: geekblogdb
      POSTGRES_USER: geekblog
      POSTGRES_PASSWORD: geekblog_password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U geekblog -d geekblogdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis pour les jobs asynchrones
  redis:
    image: redis:7-alpine
    container_name: geekblog_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend FastAPI
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: geekblog_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://geekblog:geekblog_password@db:5432/geekblogdb
      - REDIS_URL=redis://redis:6379/0
      - GROQ_API_KEY=${GROQ_API_KEY}
      - ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000,http://frontend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./.env:/app/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Worker Celery pour les tâches asynchrones
  celery_worker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: geekblog_celery
    command: celery -A app.celery_config worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://geekblog:geekblog_password@db:5432/geekblogdb
      - REDIS_URL=redis://redis:6379/0
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      - db
      - redis
      - backend
    volumes:
      - ./app:/app/app
      - ./.env:/app/.env

  # Frontend React/Vite (mode développement)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    container_name: geekblog_frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api/v1
    depends_on:
      - backend
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./index.html:/app/index.html
      - ./vite.config.ts:/app/vite.config.ts
      - ./tsconfig.json:/app/tsconfig.json
      - ./tsconfig.node.json:/app/tsconfig.node.json
      - ./tailwind.config.js:/app/tailwind.config.js
      - ./postcss.config.js:/app/postcss.config.js
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: geekblog_network